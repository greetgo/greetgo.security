plugins {
  id "org.ajoberstar.grgit" version "2.3.0"
  id "kz.greetgo.upload-to-maven" version "0.0.5"
}

def ggRepo = System.getenv('GG_REPO')

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

version = '0.0.2'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "kz.greetgo"

repositories {
  mavenLocal()
  if (ggRepo?.trim()) maven { url ggRepo.trim() }
  mavenCentral()
}

dependencies {
  ext.greetgoDbVersion = '2.3.1'
  ext.mongoDriverVersion = '3.8.1'

  compileOnly "kz.greetgo.db:greetgo.db:$greetgoDbVersion"
  testCompile "kz.greetgo.db:greetgo.db:$greetgoDbVersion"

  compileOnly "org.mongodb:mongo-java-driver:$mongoDriverVersion"
  testCompile "org.mongodb:mongo-java-driver:$mongoDriverVersion"

  testCompile "kz.greetgo.conf:greetgo.sys_params:1.0.2"
  testCompile "kz.greetgo:greetgo.util:2.0.0"

  //jdbc drivers
  testCompile "org.postgresql:postgresql:9.4-1202-jdbc42"

  if (ggRepo?.trim()) {
    testCompile "greetgo.3rd-party:oracle-ojdbc6_g:11.2.0.3"
    testCompile "greetgo.3rd-party:oracle-ucp:11.2.0.3"
  } else {
    testCompile fileTree(dir: 'lib_oracle_driver', include: ['*.jar'])
  }

  //tests
  testCompile 'org.testng:testng:6.5.1'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
  options.addStringOption('encoding', 'UTF-8')
  options.addStringOption('charSet', 'UTF-8')
}

test.useTestNG()
test.systemProperty("BUILD_DIR", project.buildDir.getAbsolutePath())
test.systemProperty("PROJECT_DIR", project.projectDir.getAbsolutePath())
test.afterTest { desc, result ->
  def showNoteFile = project.buildDir.toPath().resolve("show_note.txt").toFile()
  if (showNoteFile.exists()) {
    logger.quiet showNoteFile.text
    showNoteFile.delete()
  }
}

//test { options.suites("test1.xml") }

idea.module.inheritOutputDirs = false
idea.module.outputDir = file("$buildDir/classes/main/")
idea.module.testOutputDir = file("$buildDir/classes/test/")

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.debugOptions*.debugLevel = "source,lines,vars"

sourceSets.main.java.srcDirs = ["src"]
sourceSets.test.java.srcDirs = ["test_src"]
sourceSets.main.resources.srcDirs = ["src_resources"]
sourceSets.test.resources.srcDirs = ["test_resources"]

sourceSets.main.resources {
  srcDirs += sourceSets.main.java.srcDirs
  exclude '**/*.java'
}
sourceSets.test.resources {
  srcDirs += sourceSets.test.java.srcDirs
  exclude '**/*.java'
}

jar {
  manifest {
    attributes 'Specification-Title': project.name
    attributes 'Specification-Version': version
    attributes 'Specification-Vendor': "greetgo!"
    attributes 'Implementation-Version': grgit ? grgit.head().id : "unknown"
    attributes 'Created-By': System.getProperty("user.name")
    attributes 'Created-At': new Date().format("yyyy-MM-dd/HH:mm:ss")
  }
}

uploadToMavenCentral {
  description = 'Security infrastructure used in greetgo!'
  url = 'https://github.com/greetgo/greetgo.security'
  scm {
    url = 'https://github.com/greetgo/greetgo.security.git'
  }
  developer {
    id = 'pompei'
    name = 'Evgenij Kolpakov'
    email = 'ekolpakov@greet-go.kz'
  }
}
